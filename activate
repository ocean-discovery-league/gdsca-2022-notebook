#https://unix.stackexchange.com/a/153061
VIRTUALIZE_SOURCED_NAME="$_"

if [[ ${BASH_SOURCE-} = $0 && ! $VIRTUALIZE_ACTIVATE_VIA_SCRIPT ]]; then
    echo "you must source this script: \$ source $0" >&2
    exit 33
fi

if [[ $VIRTUALIZE_ACTIVATE_VIA_SCRIPT ]]; then
    # this assume the script doing the activating does a 'cd' into the
    # directory where the activate file is is before sourcing it
    VIRTUALIZE_SOURCED_NAME="./activate"
fi
    
if [[ $VIRTUALIZE_ROOT && ! $VIRTUALIZE_ACTIVATE_VIA_SCRIPT ]]; then
    echo "this shell is already virtualized for $VIRTUALIZE_ROOT, type 'unactivate' to undo"
    return
fi

if [[ ! -e virtualize-miniconda ]]; then
    echo "error: virtualize-miniconda is missing, run ./setup.sh to install miniconda"
    return
fi

export VIRTUALIZE_ROOT=$( cd -- "$( dirname -- "${VIRTUALIZE_SOURCED_NAME}" )" &> /dev/null && pwd )
echo "activating virtualize for $VIRTUALIZE_ROOT"

VIRTUALIZE_ORIG_PATH="$PATH"
VIRTUALIZE_ORIG_PS1="$PS1"
export PATH="$VIRTUALIZE_ROOT/bin:$VIRTUALIZE_ROOT/virtualize/bin:$PATH"

function sgr() {
    # ANSI escape codes
    # https://en.wikipedia.org/wiki/ANSI_escape_code
    # https://no-color.org
    # https://bixense.com/clicolors

    # Select Graphic Rendition codes
    # KISS and use codes rather than tput, avoid dealing with missing tput or TERM.
    # initially taken from 'n' https://github.com/tj/n

    USE_COLOR="true"
    #readonly USE_COLOR

    SGR_RESET="[0m"
    SGR_FAINT="[2m"
    SGR_RED="[31m"
    SGR_BOLD_BLUE="[01;34m"  # bold+blue
    SGR_CYAN="[36m"

    case "$1" in
        reset) echo -n "${SGR_RESET}"; exit;;
        faint) echo -n "${SGR_FAINT}"; exit;;
        red)   echo -n "${SGR_RED}"; exit;;
        boldblue) echo "${SGR_BOLD_BLUE}"; exit;;
        cyan)  echo -n "${SGR_CYAN}"; exit;;
        *) exit;;
    esac
    $VIRTUALIZE_ROOT/virtualize/bin/sgr $1
}

VIRTUALIZE_ROOT_DISPLAY=$( echo $VIRTUALIZE_ROOT | sed "s%^$HOME/%%" | sed 's/\//Â·/g' )
if [[ $ZSH_VERSION ]]; then
   PS1="%{$(sgr boldblue)%}[$VIRTUALIZE_ROOT_DISPLAY]%{$(sgr reset)%}$PS1"
else  # for bash (and others?)
   PS1="$(sgr boldblue)[$VIRTUALIZE_ROOT_DISPLAY]$(sgr reset)\n$PS1"
fi

VIRTUALIZE_LIST=()
function unactivate() {
    local unactivate
    for unactivate in "${VIRTUALIZE_LIST[@]}"; do
        echo "unactivating $unactivate"
        "unactivate_${unactivate}"
        unset -f unactivate_${unactivate}
    done
    unset VIRTUALIZE_LIST

    PATH="$VIRTUALIZE_ORIG_PATH"
    PS1="$VIRTUALIZE_ORIG_PS1"
    unset VIRTUALIZE_ORIG_PATH
    unset VIRTUALIZE_ORIG_PS1
    unset VIRTUALIZE_ROOT_DISPLAY
    unset VIRTUALIZE_SOURCED_NAME
    local virtualize_root="$VIRTUALIZE_ROOT"
    unset VIRTUALIZE_ROOT
    unset -f unactivate
    echo "unactivated $virtualize_root"
}

VIRTUALIZE_LIST+=(miniconda)
function unactivate_miniconda() {
    conda deactivate
    PATH="$VIRTUALIZE_MINICONDA_ORIG_PATH"
    unset VIRTUALIZE_MINICONDA_ORIG_PATH
    unset VIRTUALIZE_SOURCED_NAME
    unset VIRTUALIZE_MINICONDA_INSTALL_DIR
    unset VIRTUALIZE_MINICONDA_DIR
    PS1="$VIRTUALIZE_MINICONDA_ORIG_PS1"
    unset VIRTUALIZE_MINICONDA_ORIG_PS1
    unset VIRTUALIZE_MINICONDA_ACTIVE_VERSION
    unset VIRTUALIZE_MINICONDA_DISPLAY
}

VIRTUALIZE_MINICONDA_DIR="$VIRTUALIZE_ROOT/virtualize-miniconda"
VIRTUALIZE_MINICONDA_ORIG_PATH="$PATH"
export PATH="$VIRTUALIZE_MINICONDA_DIR/miniconda/bin:$PATH"
VIRTUALIZE_MINICONDA_ORIG_PS1="$PS1"
source $VIRTUALIZE_MINICONDA_DIR/miniconda/bin/activate gdsca
PS1="$VIRTUALIZE_MINICONDA_ORIG_PS1"

echo "miniconda activated for $VIRTUALIZE_MINICONDA_DIR"
echo "type 'unactivate' to undo"
echo ""
echo "type 'jupyter-lab GDSCA-2022.ipynb' to launch the notebook"
echo ""
